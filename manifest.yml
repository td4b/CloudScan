---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudscan
  namespace: security
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configfiles
  namespace: security
data:
  config.json: |
    {
      "role": "CloudScan",

      "accounts":[
        "079237733777",
        "876241632517",
        "657566590392"
      ],

      "regions":[
        "us-west-2",
        "us-west-1",
        "us-east-1",
        "us-east-2"
      ],

      "encryptionkey": "someencryptionkey",

      "routingkey":"pagerdutyroutingkey"

    }
  s3_whitelist.json: |
    {
      "Buckets":[
        "web-resources",
        "frontpage-web",
        "maintinence-page",
        "downloads"
      ]
    }
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: cloudscan-redis
spec:
  ports:
  - port: 6379
    protocol: TCP
  selector:
    app: cloudscan-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudscan-redis
  namespace: security
  labels:
    app: cloudscan-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudscan-redis
  template:
    metadata:
      labels:
        app: cloudscan-redis
    spec:
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudscan-network
  namespace: security
  labels:
    app: cloudscan-network
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudscan-network
  template:
    metadata:
      labels:
        app: cloudscan-network
      annotations:
        iam.amazonaws.com/role: "arn:aws:iam::079237733777:role/CloudScan"
    spec:
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: cloudscan
      containers:
      - name: auditor-worker
        image: CloudScan
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: configmapfiles
          mountPath: /app/config.json
          subPath: config.json
        - name: configmapfiles
          mountPath: /app/s3_whitelist.json
          subPath: s3_whitelist.json
      volumes:
      - name: data
        emptyDir: {}
      - name: configmapfiles
        configMap:
          name: configfiles
